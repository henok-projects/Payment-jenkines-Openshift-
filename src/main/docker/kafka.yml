version: '2.1'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.2.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - '9092:9092'
      - '29092:29092'
      - '9999:9999'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    depends_on:
      - zoo1
# version: '2'
# services:
#   zookeeper:
#     image: docker.io/bitnami/zookeeper:3.7
#     ports:
#       - '2181:2181'
#     volumes:
#       - 'zookeeper_data:/bitnami'
#     environment:
#       - ALLOW_ANONYMOUS_LOGIN=yes
#   kafka:
#     image: docker.io/bitnami/kafka:3
#     ports:
#       - '9092:9092'
#     volumes:
#       - 'kafka_data:/bitnami'
#     environment:
#       - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#       - ALLOW_PLAINTEXT_LISTENER=yes
#     depends_on:
#       - zookeeper

# volumes:
#   zookeeper_data:
#     driver: local
#   kafka_data:
#     driver: local
